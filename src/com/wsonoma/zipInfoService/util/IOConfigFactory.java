package com.wsonoma.zipInfoService.util;

import java.io.*;
import java.util.Properties;

import org.apache.log4j.Logger;

import com.wsonoma.zipInfoService.data.IOTypes;

public class IOConfigFactory {
	
	// This class provide a factory of currently available objects to be constructed based on property file.
	// When a new input/output is introduced, it can be easily generated by adding another case.
	
	static Logger logger = LogService.getInstance();
	
	Properties props;
	String inputType;
	String outputType;
	public IOConfigFactory() {
		File configFile = new File("Configuration\\zipConfig.properties");
		try {
		    FileReader reader = new FileReader(configFile);
		    props = new Properties();
		    props.load(reader);
		    this.inputType = props.getProperty("inputType");
		    this.outputType = props.getProperty("outputType");	
		    reader.close();
		} catch (FileNotFoundException ex) {
			logger.info(ex);
		} catch (IOException ex) {
			logger.info(ex);
		}
	}
	
	public InputManager getInputHandler () {
		switch (inputType) {
			case IOTypes.FLAT_FILE:
				return new InputManagerFlatFileImpl();
			case IOTypes.DATABASE:
				return null;
			case IOTypes.DEMO:
				return new InputManagerDemoImpl();
		}
		return null;
	}
	
	public OutputManager getOutputHandler () {
		switch (outputType) {
		case IOTypes.FLAT_FILE:
			return new OutputManagerFlatFileImpl();
		case IOTypes.DATABASE:
			return null;
		}
		return null;
	}
	


}